{
    "DOTTY-1": {
        "language": "scala",
        "version": "3.6.3",
        "symptom": "fn-exhaustiveness",
        "status": "fixed",
        "characteristics": [
            "Poly. ADT",
            "constant"
        ],
        "url": "https://github.com/scala/scala3/issues/22590",
        "test-case": [
            "sealed trait T_A",
            "case class CC_B[T](a: T) extends T_A",
            "@main def test() = {",
            "  val v_a: CC_B[Int] = CC_B(10)",
            "  val v_b: Int = v_a match{",
            "    case CC_B(12) => 0",
            "  }",
            "}"
        ]
    },
    "DOTTY-2": {
        "language": "scala",
        "version": "3.4.1",
        "symptom": "fn-exhaustiveness",
        "status": "fixed",
        "characteristics": [
            "GADT"
        ],
        "url": "https://github.com/scala/scala3/issues/20132",
        "test-case": [
            "sealed trait T_B[B]",
            "case class CC_A()",
            "case class CC_C[B]() extends T_B[B]",
            "case class CC_D[B](b: T_B[B]) extends T_B[CC_A]",
            "val v_a: T_B[CC_A] = CC_D(CC_D(null))",
            "val v_b: Int = v_a match {",
            "  case CC_C()       => 0",
            "  case CC_D(CC_C()) => 1",
            "}"
        ]
    },
    "DOTTY-3": {
        "language": "scala",
        "version": "3.4.1",
        "symptom": "fn-exhaustiveness",
        "status": "fixed",
        "characteristics": [
            "GADT"
        ],
        "url": "https://github.com/scala/scala3/issues/20128",
        "test-case": [
            "sealed trait T_A[A]",
            "case class CC_B[A](a: T_A[A]) extends T_A[Byte]",
            "case class CC_E[A](b: T_A[A]) extends T_A[Byte]",
            "val v_a: T_A[Byte] = CC_E(CC_B(null))",
            "val v_b: Int = v_a match {",
            "  case CC_E(CC_E(_)) => 0",
            "  case CC_B(_)       => 1",
            "}"
        ]
    },
    "DOTTY-4": {
        "language": "scala",
        "version": "3.4.1",
        "symptom": "fn-exhaustiveness",
        "status": "fixed",
        "characteristics": [
            "GADT"
        ],
        "url": "https://github.com/scala/scala3/issues/20129",
        "test-case": [
            "sealed trait T_A[A]",
            "case class CC_B[A](a: T_A[A], c: T_A[A]) extends T_A[Char]",
            "case class CC_C[A]() extends T_A[A]",
            "case class CC_G() extends T_A[Char]",
            "val v_a: T_A[Char] = CC_B(CC_G(), CC_C())",
            "val v_b: Int = v_a match {",
            "  case CC_C()                   => 0",
            "  case CC_G()                   => 1",
            "  case CC_B(CC_B(_, _), CC_C()) => 2",
            "  case CC_B(CC_C(), CC_C())     => 3",
            "  case CC_B(_, CC_G())          => 4",
            "  case CC_B(_, CC_B(_, _))      => 5",
            "}"
        ]
    },
    "DOTTY-5": {
        "language": "scala",
        "version": "3.4.1",
        "symptom": "fn-exhaustiveness",
        "status": "fixed",
        "characteristics": [
            "GADT"
        ],
        "url": "https://github.com/scala/scala3/issues/20130",
        "test-case": [
            "sealed trait T_A[B]",
            "sealed trait T_B[C]",
            "case class CC_B[C]() extends T_A[T_B[C]]",
            "case class CC_C[B, C](c: T_A[B], d: T_B[C]) extends T_B[C]",
            "case class CC_E[C]() extends T_B[C]",
            "val v_a: T_B[Int] = CC_C(null, CC_E())",
            "val v_b: Int = v_a match {",
            "  case CC_C(_, CC_C(_, _)) => 0",
            "  case CC_E()              => 5",
            "}"
        ]
    },
    "DOTTY-6": {
        "language": "scala",
        "version": "3.4.1",
        "symptom": "fn-exhaustiveness",
        "status": "fixed",
        "characteristics": [
            "GADT",
            "null"
        ],
        "url": "https://github.com/scala/scala3/issues/20131",
        "test-case": [
            "sealed trait T_A",
            "sealed trait T_B[A, B]",
            "case class CC_A[A, C, D](a: T_B[C, D]) extends T_B[A, T_B[C, D]]",
            "case class CC_B() extends T_A",
            "case class CC_C[A, B]() extends T_A",
            "case class CC_D[C, D](b: T_B[C, D], c: T_A)",
            "  extends T_B[CC_A[Int, Byte, Int], T_B[C, D]]",
            "val v_a: T_B[CC_A[Int, Byte, Int], T_B[Char, Char]] = CC_D(null, CC_B())",
            "val v_b: Int = v_a match {",
            "  case CC_A(_)         => 0",
            "  case CC_D(_, CC_C()) => 1",
            "}"
        ]
    },
    "DOTTY-7": {
        "language": "scala",
        "version": "3.6.1",
        "symptom": "fn-exhaustiveness",
        "status": "confirmed",
        "characteristics": [
            "GADT",
            "constant",
            "null"
        ],
        "url": "https://github.com/scala/scala3/issues/22064",
        "test-case": [
            "sealed trait T_A[B]",
            "case class CC_C(a: Int, b: T_A[Int]) extends T_A[Char]",
            "val v_a: T_A[Char] = null",
            "val v_b: Int = v_a match{",
            "  case CC_C(0, _) => 0",
            "}"
        ]
    },
    "DOTTY-8": {
        "language": "scala",
        "version": "3.4.1",
        "symptom": "fp-redundancy",
        "status": "fixed",
        "characteristics": [
            "GADT",
            "null"
        ],
        "url": "https://github.com/scala/scala3/issues/20121",
        "test-case": [
            "sealed trait T_A[A, B]",
            "type X = T_A[",
            "  Byte,",
            "  Byte",
            "]",
            "case class CC_B[A](",
            "    a: A",
            ") extends T_A[A, X]",
            "val v_a: T_A[X, X] = CC_B(null)",
            "val v_b = v_a match {",
            "  case CC_B(_) => 0",
            "  case _       => 1",
            "}"
        ]
    },
    "DOTTY-9": {
        "language": "scala",
        "version": "3.4.1",
        "symptom": "fp-redundancy",
        "status": "fixed",
        "characteristics": [
            "GADT",
            "null"
        ],
        "url": "https://github.com/scala/scala3/issues/20122",
        "test-case": [
            "sealed trait T_B[C, D]",
            "case class CC_A()",
            "case class CC_B[A, C](a: A) extends T_B[C, CC_A]",
            "case class CC_C[C, D](a: T_B[C, D])",
            "  extends T_B[Int, CC_A]",
            "case class CC_E(a: CC_C[Char, Byte])",
            "val v_a: T_B[Int, CC_A] = CC_B(CC_E(CC_C(null)))",
            "val v_b = v_a match {",
            "  case CC_B(CC_E(CC_C(_))) => 0",
            "  case _              => 1",
            "}"
        ]
    },
    "DOTTY-10": {
        "language": "scala",
        "version": "3.4.1",
        "symptom": "fp-redundancy",
        "status": "fixed",
        "characteristics": [
            "GADT",
            "null"
        ],
        "url": "https://github.com/scala/scala3/issues/20123",
        "test-case": [
            "sealed trait T_A[A, B]",
            "sealed trait T_B[C]",
            "case class CC_D[A, C]() extends T_A[A, C]",
            "case class CC_E() extends T_B",
            "case class CC_G[A, C](c: C) extends T_A[A, C]",
            "val v_a: T_A[Boolean, T_B[Boolean]] = CC_G(null)",
            "val v_b = v_a match {",
            "  case CC_D()  => 0",
            "  case CC_G(_) => 1",
            "}"
        ]
    },
    "DOTTY-11": {
        "language": "scala",
        "version": "3.6.0-RC1",
        "symptom": "performance",
        "status": "fixed",
        "characteristics": [
            "GADT"
        ],
        "url": null,
        "test-case": [
            "object Test {",
            "sealed trait T_A[A]",
            "sealed trait T_B",
            "case class CC_A[B](a: (T_B,(Int,Boolean)), b: T_A[B]) extends T_A[B]",
            "case class CC_B[C](a: T_A[C], b: C) extends T_A[C]",
            "case class CC_C[D](a: Char, b: Char) extends T_A[D]",
            "case class CC_D(a: T_A[Boolean]) extends T_B",
            "case class CC_E(a: T_A[(Int,Boolean)], b: (T_B,CC_D)) extends T_B",
            "",
            "val v_a: T_A[Char] = null",
            "val v_b: Int = v_a match{",
            "  case CC_C('x', 'x') => 0 ",
            "  case CC_B(CC_C(_, _), 'x') => 1 ",
            "  case CC_B(CC_B(CC_A(_, _), 'x'), 'x') => 2 ",
            "  case CC_B(CC_B(CC_C(_, _), 'x'), _) => 3 ",
            "  case CC_B(CC_A((CC_D(_),(_,_)), CC_A(_, _)), _) => 4 ",
            "  case CC_B(_, _) => 5 ",
            "  case CC_B(CC_A((CC_E(_, _),(_,_)), CC_A(_, _)), 'x') => 6 ",
            "  case CC_B(CC_B(CC_B(_, _), _), 'x') => 7 ",
            "  case CC_B(CC_A((CC_D(_),(_,_)), CC_B(_, _)), 'x') => 8 ",
            "  case CC_B(CC_C(_, _), _) => 9 ",
            "  case CC_B(CC_B(CC_B(_, _), _), _) => 10 ",
            "  case CC_B(CC_C('x', _), _) => 11 ",
            "  case CC_B(CC_C(_, 'x'), _) => 12 ",
            "  case CC_B(CC_B(CC_C(_, _), 'x'), 'x') => 13 ",
            "  case CC_B(CC_B(_, _), 'x') => 14 ",
            "  case CC_B(CC_B(CC_C(_, _), _), _) => 15 ",
            "  case CC_B(CC_A((CC_D(_),(_,_)), CC_B(_, _)), _) => 16 ",
            "  case CC_A((CC_E(CC_A(_, _), _),(12,_)), CC_A((CC_E(_, _),(_,_)), CC_A(_, _))) => 17 ",
            "  case CC_A((CC_D(_),(_,_)), CC_C('x', _)) => 18 ",
            "  case CC_A((CC_D(CC_A(_, _)),(12,_)), CC_B(CC_C(_, _), _)) => 19 ",
            "  case CC_A((CC_D(_),(12,_)), CC_A((CC_E(_, _),(_,_)), CC_A(_, _))) => 20 ",
            "  case CC_A((CC_E(CC_C(_, _), (_,_)),(_,_)), CC_A(_, CC_B(_, _))) => 21 ",
            "  case CC_A((CC_E(_, _),(12,_)), CC_A((CC_E(_, _),(_,_)), CC_A(_, _))) => 22 ",
            "  case CC_A((CC_E(CC_C(_, _), (_,_)),(_,_)), CC_C('x', _)) => 23 ",
            "  case CC_A((CC_E(CC_C(_, _), _),(_,_)), CC_C('x', _)) => 24 ",
            "  case CC_A((CC_D(_),(12,_)), CC_B(CC_C(_, _), _)) => 25 ",
            "  case CC_A((CC_E(CC_B(_, _), _),(_,_)), CC_A((CC_E(_, _),(_,_)), CC_B(_, _))) => 26 ",
            "  case CC_A((CC_E(CC_B(_, _), _),(12,_)), CC_A((CC_D(_),(_,_)), CC_B(_, _))) => 27 ",
            "  case CC_A((CC_D(_),(12,_)), CC_C(_, 'x')) => 28 ",
            "  case CC_A((CC_E(_, (_,_)),(12,_)), CC_C(_, 'x')) => 29 ",
            "  case CC_A((CC_E(_, (_,_)),(12,_)), CC_A((CC_E(_, _),(_,_)), CC_B(_, _))) => 30 ",
            "  case CC_A((CC_E(CC_B(_, _), _),(_,_)), CC_A((CC_D(_),(_,_)), _)) => 31 ",
            "  case CC_A((CC_E(CC_C(_, _), (_,_)),(12,_)), CC_A((CC_E(_, _),(_,_)), CC_B(_, _))) => 32 ",
            "  case CC_A((CC_D(CC_C(_, _)),(12,_)), CC_B(CC_C(_, _), 'x')) => 33 ",
            "  case CC_A((CC_E(_, (_,_)),(_,_)), CC_B(_, _)) => 34 ",
            "  case CC_A((CC_E(_, _),(_,_)), CC_B(CC_B(_, _), _)) => 35 ",
            "  case CC_A((CC_E(CC_A(_, _), _),(12,_)), CC_B(CC_C(_, _), _)) => 36 ",
            "  case CC_A((CC_E(CC_B(_, _), (_,_)),(_,_)), CC_A(_, CC_C(_, _))) => 37 ",
            "  case CC_A((CC_E(CC_C(_, _), _),(_,_)), CC_C('x', 'x')) => 38 ",
            "  case CC_A((CC_E(_, (_,_)),(_,_)), CC_A((CC_D(_),(_,_)), _)) => 39 ",
            "  case CC_A((CC_E(CC_B(_, _), _),(12,_)), CC_C(_, _)) => 40 ",
            "  case CC_A((CC_E(_, _),(_,_)), CC_A(_, CC_A(_, _))) => 41 ",
            "  case CC_A((CC_E(_, _),(_,_)), CC_B(CC_A(_, _), 'x')) => 42 ",
            "  case CC_A((CC_E(_, (_,_)),(12,_)), CC_A((CC_D(_),(_,_)), CC_B(_, _))) => 43 ",
            "  case CC_A((CC_E(CC_C(_, _), (_,_)),(12,_)), CC_C('x', _)) => 44 ",
            "  case CC_A((CC_D(CC_A(_, _)),(12,_)), CC_C(_, _)) => 45 ",
            "  case CC_A((CC_E(_, _),(12,_)), CC_A(_, _)) => 46 ",
            "  case CC_A((CC_E(CC_A(_, _), (_,_)),(_,_)), CC_A(_, CC_A(_, _))) => 47 ",
            "  case CC_A((CC_E(CC_C(_, _), (_,_)),(_,_)), CC_B(CC_C(_, _), _)) => 48 ",
            "  case CC_A((CC_D(CC_B(_, _)),(12,_)), CC_B(CC_B(_, _), _)) => 49 ",
            "  case CC_A((CC_E(CC_A(_, _), (_,_)),(12,_)), CC_A((CC_D(_),(_,_)), CC_B(_, _))) => 50 ",
            "  case CC_A((CC_E(_, _),(12,_)), CC_B(CC_B(_, _), 'x')) => 51 ",
            "  case CC_A((CC_D(_),(12,_)), _) => 52 ",
            "  case CC_A((CC_E(CC_C(_, _), _),(12,_)), CC_A((CC_E(_, _),(_,_)), CC_B(_, _))) => 53 ",
            "  case CC_A((CC_E(CC_B(_, _), _),(_,_)), CC_B(CC_C(_, _), 'x')) => 54 ",
            "  case CC_A((CC_E(_, (_,_)),(12,_)), _) => 55 ",
            "  case CC_A((CC_D(CC_C(_, _)),(12,_)), CC_A((CC_E(_, _),(_,_)), _)) => 56 ",
            "  case CC_A((CC_E(CC_A(_, _), (_,_)),(_,_)), CC_B(CC_C(_, _), 'x')) => 57 ",
            "  case CC_A((CC_E(CC_A(_, _), (_,_)),(_,_)), CC_A((CC_D(_),(_,_)), CC_A(_, _))) => 58 ",
            "  case CC_A((CC_D(CC_B(_, _)),(12,_)), CC_B(_, _)) => 59 ",
            "  case CC_A((CC_D(CC_C(_, _)),(12,_)), CC_A((CC_E(_, _),(_,_)), CC_C(_, _))) => 60 ",
            "  case CC_A((CC_D(_),(_,_)), CC_B(CC_C(_, _), 'x')) => 61 ",
            "  case CC_A((CC_E(CC_A(_, _), _),(12,_)), CC_A(_, _)) => 62 ",
            "  case CC_A((CC_E(CC_C(_, _), _),(_,_)), CC_A((CC_E(_, _),(_,_)), _)) => 63 ",
            "  case CC_A((CC_D(CC_A(_, _)),(_,_)), CC_C('x', _)) => 64 ",
            "  case CC_A((CC_D(CC_A(_, _)),(_,_)), CC_A((CC_D(_),(_,_)), _)) => 65 ",
            "  case CC_A((CC_E(CC_C(_, _), _),(_,_)), CC_B(CC_B(_, _), _)) => 66 ",
            "  case CC_A((CC_E(CC_A(_, _), (_,_)),(12,_)), CC_C(_, _)) => 67 ",
            "  case CC_A((CC_E(CC_C(_, _), (_,_)),(12,_)), CC_B(CC_A(_, _), _)) => 68 ",
            "  case CC_A((CC_E(CC_B(_, _), (_,_)),(_,_)), CC_A(_, CC_A(_, _))) => 69 ",
            "  case CC_A((CC_E(_, _),(_,_)), CC_C(_, 'x')) => 70 ",
            "  case CC_A((CC_E(_, _),(12,_)), CC_B(CC_A(_, _), 'x')) => 71 ",
            "  case CC_A((CC_E(CC_B(_, _), _),(12,_)), CC_A((CC_E(_, _),(_,_)), _)) => 72 ",
            "  case CC_A((CC_D(CC_A(_, _)),(_,_)), CC_C(_, _)) => 73 ",
            "  case CC_A((CC_D(_),(_,_)), CC_C(_, _)) => 74 ",
            "  case CC_A((CC_E(CC_B(_, _), _),(12,_)), CC_B(CC_C(_, _), 'x')) => 75 ",
            "  case CC_A((CC_E(CC_B(_, _), _),(12,_)), CC_A(_, _)) => 76 ",
            "  case CC_A((CC_D(CC_B(_, _)),(12,_)), CC_A((CC_E(_, _),(_,_)), CC_C(_, _))) => 77 ",
            "  case CC_A((CC_D(CC_A(_, _)),(_,_)), _) => 78 ",
            "  case CC_A((CC_E(CC_B(_, _), (_,_)),(12,_)), CC_A((CC_D(_),(_,_)), CC_C(_, _))) => 79 ",
            "  case CC_A((CC_E(CC_B(_, _), _),(12,_)), CC_A(_, CC_A(_, _))) => 80 ",
            "  case CC_A((CC_E(CC_A(_, _), _),(_,_)), CC_A((CC_E(_, _),(_,_)), CC_C(_, _))) => 81 ",
            "  case CC_A((CC_D(CC_B(_, _)),(12,_)), CC_B(CC_B(_, _), 'x')) => 82 ",
            "  case CC_A((CC_E(CC_A(_, _), (_,_)),(_,_)), CC_B(CC_B(_, _), 'x')) => 83 ",
            "  case CC_A((CC_E(CC_A(_, _), _),(12,_)), CC_A((CC_D(_),(_,_)), CC_C(_, _))) => 84 ",
            "  case CC_A((CC_E(CC_B(_, _), (_,_)),(12,_)), CC_A((CC_D(_),(_,_)), CC_A(_, _))) => 85 ",
            "  case CC_A((CC_D(CC_B(_, _)),(_,_)), CC_C('x', 'x')) => 86 ",
            "  case CC_A((CC_E(CC_C(_, _), (_,_)),(12,_)), CC_A((CC_D(_),(_,_)), _)) => 87 ",
            "  case CC_A((CC_E(_, (_,_)),(_,_)), CC_B(CC_A(_, _), 'x')) => 88 ",
            "  case CC_A((CC_E(_, _),(_,_)), CC_C('x', 'x')) => 89 ",
            "  case CC_A((CC_E(CC_A(_, _), _),(_,_)), CC_B(_, _)) => 90 ",
            "  case CC_A((CC_E(CC_B(_, _), _),(12,_)), CC_B(CC_B(_, _), _)) => 91 ",
            "  case CC_A((CC_E(CC_A(_, _), (_,_)),(_,_)), CC_A(_, CC_B(_, _))) => 92 ",
            "  case CC_A((CC_E(_, (_,_)),(_,_)), CC_A((CC_E(_, _),(_,_)), _)) => 93 ",
            "  case CC_A((CC_E(CC_A(_, _), (_,_)),(_,_)), CC_C('x', _)) => 94 ",
            "  case CC_A((CC_D(CC_B(_, _)),(_,_)), CC_B(CC_C(_, _), 'x')) => 95 ",
            "  case CC_A((CC_E(CC_B(_, _), _),(_,_)), CC_C('x', _)) => 96 ",
            "  case CC_A((CC_E(CC_B(_, _), (_,_)),(12,_)), CC_A(_, _)) => 97 ",
            "  case CC_A((CC_E(CC_C(_, _), _),(12,_)), CC_A((CC_D(_),(_,_)), CC_C(_, _))) => 98 ",
            "  case CC_A((CC_E(CC_B(_, _), (_,_)),(_,_)), CC_B(CC_C(_, _), _)) => 99 ",
            "  case CC_A((CC_D(CC_B(_, _)),(_,_)), CC_C(_, _)) => 100 ",
            "  case CC_A((CC_D(CC_B(_, _)),(12,_)), CC_C(_, _)) => 101 ",
            "  case CC_A((CC_D(CC_A(_, _)),(_,_)), CC_B(CC_C(_, _), 'x')) => 102 ",
            "  case CC_A((CC_D(CC_B(_, _)),(12,_)), CC_B(CC_A(_, _), 'x')) => 103 ",
            "  case CC_A((CC_E(CC_C(_, _), (_,_)),(12,_)), CC_A((CC_D(_),(_,_)), CC_C(_, _))) => 104 ",
            "  case CC_A((CC_E(CC_C(_, _), (_,_)),(12,_)), CC_B(_, _)) => 105 ",
            "  case CC_A((CC_D(CC_C(_, _)),(12,_)), CC_A((CC_E(_, _),(_,_)), CC_B(_, _))) => 106 ",
            "  case CC_A((CC_E(_, _),(12,_)), CC_A(_, CC_A(_, _))) => 107 ",
            "  case CC_A((CC_E(CC_B(_, _), _),(_,_)), CC_A((CC_D(_),(_,_)), CC_A(_, _))) => 108 ",
            "  case CC_A((CC_E(CC_B(_, _), (_,_)),(_,_)), CC_A((CC_D(_),(_,_)), CC_C(_, _))) => 109 ",
            "  case CC_A((CC_E(CC_C(_, _), _),(_,_)), CC_A(_, CC_B(_, _))) => 110 ",
            "  case CC_A((CC_E(CC_B(_, _), _),(12,_)), CC_A((CC_D(_),(_,_)), CC_A(_, _))) => 111 ",
            "  case CC_A((CC_E(CC_C(_, _), (_,_)),(_,_)), CC_B(CC_A(_, _), _)) => 112 ",
            "  case CC_A(_, CC_A((CC_E(_, _),(_,_)), _)) => 113 ",
            "  case CC_A((CC_D(CC_A(_, _)),(12,_)), CC_A((CC_E(_, _),(_,_)), CC_A(_, _))) => 114 ",
            "  case CC_A((CC_D(_),(_,_)), CC_B(_, 'x')) => 115 ",
            "  case CC_A((CC_E(_, (_,_)),(_,_)), CC_B(CC_C(_, _), _)) => 116 ",
            "  case CC_A((CC_D(CC_C(_, _)),(_,_)), CC_C(_, _)) => 117 ",
            "  case CC_A((CC_E(CC_C(_, _), (_,_)),(12,_)), CC_B(CC_C(_, _), 'x')) => 118 ",
            "  case CC_A((CC_D(_),(12,_)), CC_B(CC_C(_, _), 'x')) => 119 ",
            "  case CC_A((CC_D(CC_B(_, _)),(_,_)), CC_A((CC_D(_),(_,_)), CC_C(_, _))) => 120 ",
            "  case CC_A((CC_E(_, (_,_)),(_,_)), CC_A((CC_E(_, _),(_,_)), CC_B(_, _))) => 121 ",
            "  case CC_A((CC_E(CC_C(_, _), _),(12,_)), CC_A((CC_D(_),(_,_)), CC_A(_, _))) => 122 ",
            "  case CC_A((CC_D(CC_C(_, _)),(12,_)), CC_A((CC_D(_),(_,_)), CC_B(_, _))) => 123 ",
            "  case CC_A((CC_E(CC_A(_, _), (_,_)),(_,_)), CC_C(_, 'x')) => 124 ",
            "  case CC_A((CC_D(CC_C(_, _)),(_,_)), CC_A((CC_E(_, _),(_,_)), CC_C(_, _))) => 125 ",
            "  case CC_A((CC_E(CC_A(_, _), _),(_,_)), CC_A(_, CC_C(_, _))) => 126 ",
            "  case CC_A((CC_D(_),(_,_)), CC_A(_, CC_C(_, _))) => 127 ",
            "  case CC_A((CC_D(CC_C(_, _)),(_,_)), CC_A((CC_E(_, _),(_,_)), CC_A(_, _))) => 128 ",
            "  case CC_A((CC_D(_),(12,_)), CC_A(_, _)) => 129 ",
            "  case CC_A((CC_E(CC_B(_, _), _),(_,_)), CC_B(CC_C(_, _), _)) => 130 ",
            "  case CC_A((CC_E(_, _),(_,_)), CC_B(CC_C(_, _), _)) => 131 ",
            "  case CC_A((CC_D(_),(_,_)), _) => 132 ",
            "  case CC_A(_, CC_A((CC_D(_),(_,_)), _)) => 133 ",
            "  case CC_A((CC_E(CC_B(_, _), _),(12,_)), CC_A((CC_D(_),(_,_)), _)) => 134 ",
            "  case CC_A((CC_D(_),(12,_)), CC_A(_, CC_B(_, _))) => 135 ",
            "  case CC_A((CC_E(CC_A(_, _), _),(12,_)), CC_B(_, 'x')) => 136 ",
            "  case CC_A((CC_E(CC_B(_, _), (_,_)),(_,_)), CC_C(_, _)) => 137 ",
            "  case CC_A((CC_E(CC_B(_, _), (_,_)),(12,_)), CC_B(_, 'x')) => 138 ",
            "  case CC_A((CC_E(CC_C(_, _), _),(_,_)), CC_A((CC_D(_),(_,_)), CC_B(_, _))) => 139 ",
            "  case CC_A((CC_D(CC_A(_, _)),(_,_)), CC_A((CC_D(_),(_,_)), CC_A(_, _))) => 140 ",
            "  case CC_A((CC_E(_, (_,_)),(_,_)), CC_A((CC_D(_),(_,_)), CC_C(_, _))) => 141 ",
            "  case CC_A((CC_E(CC_A(_, _), _),(_,_)), CC_C(_, _)) => 142 ",
            "  case CC_A((CC_E(_, (_,_)),(_,_)), CC_A(_, CC_A(_, _))) => 143 ",
            "  case CC_A((CC_D(CC_C(_, _)),(12,_)), CC_A((CC_D(_),(_,_)), CC_C(_, _))) => 144 ",
            "  case CC_A((CC_E(CC_A(_, _), (_,_)),(12,_)), CC_A((CC_E(_, _),(_,_)), _)) => 145 ",
            "  case CC_A(_, CC_C(_, _)) => 146 ",
            "  case CC_A((CC_E(CC_C(_, _), (_,_)),(_,_)), CC_A(_, CC_C(_, _))) => 147 ",
            "  case CC_A((CC_E(CC_A(_, _), _),(12,_)), CC_B(CC_A(_, _), _)) => 148 ",
            "  case CC_A(_, CC_A(_, _)) => 149 ",
            "  case CC_A((CC_E(_, _),(12,_)), CC_A((CC_D(_),(_,_)), CC_A(_, _))) => 150 ",
            "  case CC_A((CC_E(_, (_,_)),(12,_)), CC_B(CC_A(_, _), 'x')) => 151 ",
            "  case CC_A((CC_D(CC_C(_, _)),(12,_)), CC_C('x', _)) => 152 ",
            "  case CC_A((CC_D(_),(_,_)), CC_A(_, CC_A(_, _))) => 153 ",
            "  case CC_A((CC_E(_, (_,_)),(_,_)), CC_A((CC_D(_),(_,_)), CC_A(_, _))) => 154 ",
            "  case CC_A((CC_E(_, _),(12,_)), CC_A((CC_E(_, _),(_,_)), CC_B(_, _))) => 155 ",
            "  case CC_A((CC_E(CC_B(_, _), _),(12,_)), CC_A((CC_E(_, _),(_,_)), CC_C(_, _))) => 156 ",
            "  case CC_A((CC_E(CC_B(_, _), _),(_,_)), CC_C('x', 'x')) => 157 ",
            "  case CC_A((CC_E(_, (_,_)),(_,_)), CC_A((CC_D(_),(_,_)), CC_B(_, _))) => 158 ",
            "  case CC_A(_, CC_A((CC_D(_),(_,_)), CC_B(_, _))) => 159 ",
            "  case CC_A((CC_E(CC_A(_, _), _),(_,_)), CC_A(_, _)) => 160 ",
            "  case CC_A((CC_E(CC_B(_, _), (_,_)),(12,_)), CC_B(CC_A(_, _), _)) => 161 ",
            "  case CC_A((CC_E(_, (_,_)),(_,_)), CC_B(_, 'x')) => 162 ",
            "  case CC_A((CC_E(CC_A(_, _), _),(12,_)), CC_A((CC_D(_),(_,_)), CC_B(_, _))) => 163 ",
            "  case CC_A((CC_E(CC_C(_, _), (_,_)),(_,_)), CC_B(CC_B(_, _), 'x')) => 164 ",
            "  case CC_A(_, CC_A(_, CC_C(_, _))) => 165 ",
            "  case CC_A((CC_E(CC_B(_, _), _),(12,_)), CC_A((CC_E(_, _),(_,_)), CC_A(_, _))) => 166 ",
            "  case CC_A((CC_E(CC_A(_, _), _),(_,_)), CC_C('x', 'x')) => 167 ",
            "  case CC_A((CC_D(CC_B(_, _)),(12,_)), CC_B(CC_C(_, _), 'x')) => 168 ",
            "  case CC_A((CC_E(CC_C(_, _), (_,_)),(_,_)), _) => 169 ",
            "  case CC_A((CC_E(_, _),(_,_)), CC_A((CC_D(_),(_,_)), CC_C(_, _))) => 170 ",
            "  case CC_A((CC_E(_, _),(_,_)), CC_C('x', _)) => 171 ",
            "  case CC_A((CC_D(CC_A(_, _)),(_,_)), CC_A((CC_E(_, _),(_,_)), CC_A(_, _))) => 172 ",
            "  case CC_A((CC_E(_, _),(_,_)), CC_A((CC_D(_),(_,_)), CC_B(_, _))) => 173 ",
            "  case CC_A((CC_D(CC_A(_, _)),(12,_)), CC_A(_, CC_C(_, _))) => 174 ",
            "}",
            "}",
            ""
        ]
    },
    "DOTTY-12": {
        "language": "scala",
        "version": "3.7.1",
        "symptom": "fp-redundancy",
        "status": "confirmed",
        "characteristics": [
            "GADT",
            "null"
        ],
        "url": "https://github.com/scala/scala3/issues/23407",
        "test-case": [
            "sealed trait A[T]",
            "case class CC_A[T](a: B[T]) extends A[T]",
            "case class CC_B[T]() extends A[T]",
            "sealed trait B[T]",
            "case class CC_C() extends B[Int]",
            "@main def test() = {",
            "  val x: A[CC_C] = CC_A(null)",
            "  val res: Int = x match{",
            "   case CC_A(_) => 0",
            "   case CC_B() => 1",
            "  }",
            "  print(res) // prints 0",
            "}"
        ]
    },
    "JAVA-1": {
        "language": "java",
        "version": "22.0.2-oracle",
        "symptom": "fp-exhaustiveness",
        "status": "fixed",
        "characteristics": [
            "ADT"
        ],
        "url": null,
        "test-case": [
            "sealed interface A {}",
            "record CC_A() implements A {}",
            "record CC_B() implements A {}",
            "",
            "sealed interface B {}",
            "record CC_C(A a, A b) implements B {}",
            "",
            "public class Test {",
            "  public static void main(String[] args) {",
            "      B x = new CC_C(new CC_B(), new CC_B());",
            "      int y = switch(x) {",
            "          case CC_C(CC_A(), CC_A()) -> 1;",
            "          // case CC_C(CC_B(), CC_B()) -> 2;",
            "          case CC_C(CC_B(), var d) -> 2;",
            "          case CC_C(var d, CC_B()) -> 3;",
            "      };",
            "  }",
            "}"
        ]
    },
    "JAVA-2": {
        "language": "java",
        "version": "22-0.2-oracle",
        "symptom": "fp-exhaustiveness",
        "status": "unconfirmed",
        "characteristics": [
            "ADT"
        ],
        "url": null,
        "test-case": [
            "sealed interface I {}",
            "record A(I a, I b) implements I {}",
            "record B(A a, I b) implements I {}",
            "",
            "",
            "public class Test {",
            "  public static void main(String[] args) {",
            "    I x = new B(null, null);",
            "    Integer res = switch (x) {",
            "        case B(A(A(var a, var b), var c), A(var d, B(var e, var f))) -> 1;",
            "        case B(A(B(var a, var b), var c), var d) -> 1;",
            "        case B(var a, B(var b, var c)) -> 2;",
            "        case B(var a, A(var b, A(var c, var d))) -> 3;",
            "        case A(var a, var d) -> 4;",
            "    };",
            "  }",
            "}",
            ""
        ]
    },
    "JAVA-3": {
        "language": "java",
        "version": "22-0.2-oracle",
        "symptom": "fp-exhaustiveness",
        "status": "won't fix",
        "characteristics": [
            "ADT"
        ],
        "url": "https://bugs.openjdk.org/browse/JDK-8337522",
        "test-case": [
            "public class Test {",
            "    sealed interface I_A {",
            "    }",
            "",
            "    sealed interface I_B {",
            "    }",
            "",
            "    record R_A(I_A a, I_B b) implements I_A {",
            "    }",
            "",
            "    record R_B() implements I_A {",
            "    }",
            "",
            "    record R_D(R_A c, I_A d) implements I_B {",
            "    }",
            "",
            "    public static void main(String args[]) {",
            "",
            "        I_B v_a = null;",
            "        Integer v_b = switch (v_a) {",
            "            case R_D(R_A(R_A(var a, var b), var c), var d) -> 1;",
            "",
            "            case R_D(R_A(R_B(), var b), R_A(R_B(), var x)) -> 2;",
            "",
            "            case R_D(var a, R_A(R_A(var b, var c), var d)) -> 3;",
            "            case R_D(var a, R_B()) -> 4;",
            "        };",
            "    }",
            "",
            "}",
            ""
        ]
    },
    "JAVA-4": {
        "language": "java",
        "version": "22-0.2-oracle",
        "symptom": "fp-exhaustiveness",
        "status": "fixed",
        "characteristics": [
            "ADT"
        ],
        "url": null,
        "test-case": [
            "class Test {",
            "",
            "    sealed interface I_A{}",
            "    record R_A() implements I_A{}",
            "    record R_B() implements I_A{}",
            "    record R_C(I_A a, I_A b) implements I_A{}",
            "    public static void main(String args[]) {",
            "        R_C v_a = null;",
            "        Integer v_b = switch (v_a){",
            "          case R_C(var a, R_A()) -> 0; ",
            "          case R_C(R_C(var a, var b), var c) -> 1; ",
            "          case R_C(var a, R_C(var b, var c)) -> 2; ",
            "          case R_C(R_B(), R_B()) -> 3; ",
            "          case R_C(R_A(), var a) -> 4; ",
            "        };",
            "    }",
            "",
            "};",
            ""
        ]
    }
}
